(()=>{var e,n={879:()=>{},710:e=>{e.exports="precision highp float;\n\nuniform vec3 ambientColor;\nuniform float ambientReflectance;\n\nvoid main()\n{\n  gl_FragColor = ambientReflectance * vec4(ambientColor,1.);\n}"},158:e=>{e.exports="precision mediump float;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"},375:e=>{e.exports="uniform vec3 ambientColor;\nuniform float ambientReflectance;\nuniform vec3 diffColor;\nuniform float diffReflectance;\nuniform vec3 specColor;\nuniform float specReflectance;\nuniform float shininess;\n\nin vec3 v_fragPos;\nin vec3 v_normal;\nin vec3 v_lightPos;\n\n\n\nvoid main()\n{\n    // ambient\n    vec3 ambient = ambientReflectance * ambientColor;    \n    \n     // diffuse \n    vec3 norm = normalize(v_normal);\n    vec3 lightDir = normalize(v_lightPos - v_fragPos);\n    float diff = max(dot(norm, lightDir),0.0);\n    vec3 diffuse = diffReflectance * diffColor * diff;\n\n    // specular\n    vec3 viewDir = normalize(-v_fragPos); \n    vec3 bisectorDir = normalize(viewDir+lightDir);\n    float spec = pow(max(dot(norm, bisectorDir), 0.0), shininess);\n    vec3 specular = specReflectance * specColor * spec; \n    \n    vec3 result = ambient + diffuse + specular;\n    gl_FragColor = vec4(result, 1.0);\n}"},642:e=>{e.exports="\n\nout vec3 v_fragPos;\nout vec3 v_normal;\nout vec3 v_lightPos;\n\nuniform vec3 lightPos;\n\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    v_normal = normalMatrix * normal;\n    v_fragPos = vec3(modelViewMatrix * vec4(position, 1.0));\n    v_lightPos = vec3(viewMatrix * vec4(lightPos, 1.0)); \n}\n"},941:e=>{e.exports="in vec3 v_color;\n\n\nvoid main()\n{\n    gl_FragColor = vec4(v_color,1);\n}"},117:e=>{e.exports="uniform vec3 lightPos; \n\nuniform vec3 ambientColor;\nuniform float ambientReflectance;\nuniform vec3 diffColor;\nuniform float diffReflectance;\nuniform vec3 specColor;\nuniform float specReflectance;\nuniform float shininess;\n\nout vec3 v_color;\n\nvoid main(){\n\n    // ambient\n    vec3 ambient = ambientReflectance * ambientColor;    \n    \n     // diffuse \n    // vec3 N  = normalize(mat3(transpose(inverse(modelViewMatrix))) * normal);\n    vec3 N  = normalize(normalMatrix * normal);\n    vec3 fragPos = vec3(modelViewMatrix * vec4(position, 1.0));\n    vec3 lightPos = vec3(viewMatrix* vec4(lightPos,1.0));\n    vec3 L = normalize(lightPos - fragPos);\n    float diff = max(dot(N, L),0.0);\n    vec3 diffuse = diffReflectance * diffColor * diff;\n\n    // specular\n    vec3 E = normalize(cameraPosition - fragPos);\n    vec3 R = normalize(reflect(-L, N));  \n    float spec = pow(max(dot(R, E), 0.0), shininess);\n    vec3 specular = specReflectance * specColor * spec; \n\n    v_color = ambient + diffuse + specular;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"},789:e=>{e.exports="precision mediump float;\n\nuniform vec3 ambientColor;\nuniform float ambientReflectance;\nuniform vec3 diffColor;\nuniform float diffReflectance;\nuniform vec3 lightPos;\n\nin vec3 v_fragPos;\nin vec3 v_normal;\n\n\nvoid main()\n{\n    // ambient\n    vec3 ambient = ambientReflectance * ambientColor;    \n    vec4 fragColor;\n    \n     // diffuse \n    vec3 norm = normalize(v_normal);\n    vec3 lightDir = normalize(lightPos - v_fragPos);\n    float diff = dot(norm, lightDir);\n    vec3 diffuse = diffReflectance * diffColor * diff;\n    \n    vec3 result = ambient + diffuse;\n    fragColor = vec4(result, 1.0);\n    gl_FragColor = fragColor;\n}"},989:e=>{e.exports="out vec3 v_fragPos;\nout vec3 v_normal;\n\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    v_fragPos = vec3(modelMatrix * vec4(position, 1.0));\n    v_normal = mat3(transpose(inverse(modelMatrix))) * normal;\n}"},617:e=>{e.exports="precision mediump float;\n\nin vec3 v_normal;\n\n\nvoid main() {\n  gl_FragColor = vec4((normalize(v_normal) + vec3(1.0, 1.0, 1.0))/2.0, 1.0);\n}"},488:e=>{e.exports="precision mediump float;\n\nout vec3 v_normal;\n\nvoid main(){\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n    v_normal = mat3(transpose(inverse(modelMatrix))) * normal;\n}"},330:e=>{e.exports="uniform vec3 ambientColor;\nuniform float ambientReflectance;\nuniform vec3 diffColor;\nuniform float diffReflectance;\nuniform vec3 specColor;\nuniform float specReflectance;\nuniform float shininess;\n\nin vec3 v_fragPos;\nin vec3 v_normal;\nin vec3 v_lightPos;\n\n\n\nvoid main()\n{\n    // ambient\n    vec3 ambient = ambientReflectance * ambientColor;    \n    \n     // diffuse \n    vec3 norm = normalize(v_normal);\n    vec3 lightDir = normalize(v_lightPos - v_fragPos);\n    float diff = max(dot(norm, lightDir),0.0);\n    vec3 diffuse = diffReflectance * diffColor * diff;\n\n    // specular\n    vec3 viewDir = normalize(-v_fragPos); // the viewer is always at (0,0,0) in view-space, so viewDir is (0,0,0) - Position => -Position\n    vec3 reflectDir = reflect(-lightDir, norm);  \n    float spec = pow(max(dot(viewDir, reflectDir), 0.0), shininess);\n    vec3 specular = specReflectance * specColor * spec; \n    \n    vec3 result = ambient + diffuse + specular;\n    gl_FragColor = vec4(result, 1.0);\n}"},976:e=>{e.exports="out vec3 v_fragPos;\nout vec3 v_normal;\nout vec3 v_lightPos;\n\nuniform vec3 lightPos; // we now define the uniform in the vertex shader and pass the 'view space' lightpos to the fragment shader. lightPos is currently in world space.\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    v_fragPos = vec3(modelViewMatrix * vec4(position, 1.0));\n    v_normal = mat3(transpose(inverse(modelViewMatrix))) * normal;\n    v_lightPos = vec3(viewMatrix * vec4(lightPos, 1.0)); // Transform world-space light position to view-space light position\n}"},975:e=>{e.exports="precision mediump float;\n\nin vec3 v_normal;\nin vec3 v_viewDir;\n\n\nvoid main()\n{\n\n    float intensity = dot(normalize(v_viewDir),normalize(v_normal));\n    vec4 fragColor;\n    if (intensity > 0.95)\n        fragColor = vec4(0.9, 0.05, 0.05, 1);\n    else if (intensity > 0.7)\n        fragColor = vec4(0.68, 0.13, 0.13, 1);\n    else if (intensity > 0.25)\n        fragColor = vec4(0.49, 0.1, 0.1, 1);    \n    else\n        fragColor = vec4(0.25, 0.07, 0.07, 1);\n\n        gl_FragColor = fragColor;\n\n}\n"},703:e=>{e.exports="precision mediump float;\n\nout vec3 v_normal;\nout vec3 v_viewDir;\n\nvoid main(){  \n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n    vec3 fragPos = vec3(modelViewMatrix * vec4(position,1.0));\n    v_normal = normalMatrix * normal;\n    v_viewDir =  - fragPos;\n\n}"},232:(e,n,o)=>{"use strict";var i=o(477),t=o(365),a=o(376);class r{constructor(){return this._handler=[],new Proxy(this,{set:function(e,n,o){return e[n]=o,null!=e._handler&&e._handler.forEach((e=>e({key:n,value:o}))),!0}})}addCallback(e){this._handler.push(e)}}var l=o(466),s=o.n(l);class c{constructor(e,n,o,t,a){this.Parent=e,this.Renderer=n,this.Camera=o,this.Scene=t,this.Stats=new(s()),this.Controls=a,this.Stats.dom.style.position="absolute",this.Parent.appendChild(this.Stats.dom),this.Renderer.setPixelRatio(window.devicePixelRatio),this.Renderer.setSize(this.Parent.offsetWidth,this.Parent.offsetHeight),this.Renderer.autoClear=!1,this.Camera instanceof i.cPb&&(this.Camera.aspect=this.Parent.offsetWidth/this.Parent.offsetHeight),this.Camera.updateProjectionMatrix(),window.addEventListener("resize",(()=>{this.Renderer.setSize(this.Parent.offsetWidth,this.Parent.offsetHeight),this.Camera instanceof i.cPb&&(this.Camera.aspect=this.Parent.offsetWidth/this.Parent.offsetHeight),this.Camera.updateProjectionMatrix()})),this.Parent.appendChild(this.Renderer.domElement)}update(){this.Stats.update(),null!=this.Controls&&this.Controls.update()}preRenderHook(){}render(){this.Renderer.render(this.Scene,this.Camera)}animate(){requestAnimationFrame(this.animate.bind(this)),this.update(),this.preRenderHook(),this.render()}}function f(e,n){return e.id=n,e.style.gridArea=n,e.classList.add("window"),e.style.position="relative",e.style.display="flex",e.style.flexDirection="column",e.setLayout=function(n){e.style.display="grid",this.style.gridTemplateAreas='"'+n.map((e=>e.join(" "))).join('" "')+'"'},e.setLayoutRows=function(e){this.style.gridTemplateRows=e.join(" ")},e.setLayoutColumns=function(e){this.style.gridTemplateColumns=e.join(" ")},e}const m=f(document.body,"app");var v,d=o(158),u=o.n(d),h=o(710),p=o.n(h);!function(e){e.ambient="Ambient",e.normal="Normal",e.toon="Toon",e.lambert="Lambert",e.gouraud_phong="Gouraud",e.phong_phong="Phong",e.phong_blinnPhong="Blinn-Phong"}(v||(v={}));var g,b,_,P=o(488),w=o.n(P),C=o(617),x=o.n(C),R=o(703),y=o.n(R),j=o(975),z=o.n(j),M=o(117),S=o.n(M),k=o(941),D=o.n(k),L=o(976),O=o.n(L),V=o(330),K=o.n(V),F=o(989),X=o.n(F),E=o(789),T=o.n(E),A=o(642),U=o.n(A),Z=o(375),H=o.n(Z),N=new i.xsS,Y=new i.Pa4(104/255,13/255,13/255),B=.5,W=new i.Pa4(.8,25/255,25/255),G=1,$=new i.Pa4(1,1,1),J=1,q=128;function I(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({uniforms:{ambientColor:{value:Y},ambientReflectance:{value:B}},vertexShader:u(),fragmentShader:p()}),e.material.needsUpdate=!0)}))}function Q(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({vertexShader:w(),fragmentShader:x()}),e.material.needsUpdate=!0)}))}function ee(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({vertexShader:y(),fragmentShader:z()}),e.material.needsUpdate=!0)}))}function ne(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({uniforms:{ambientColor:{value:Y},ambientReflectance:{value:B},diffColor:{value:W},diffReflectance:{value:G},lightPos:{value:new i.Pa4(g.position.x,g.position.y,g.position.z)}},vertexShader:X(),fragmentShader:T()}),e.material.needsUpdate=!0)}))}function oe(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({uniforms:{ambientColor:{value:Y},ambientReflectance:{value:B},diffColor:{value:W},diffReflectance:{value:G},specColor:{value:$},specReflectance:{value:J},shininess:{value:q},lightPos:{value:new i.Pa4(g.position.x,g.position.y,g.position.z)}},vertexShader:S(),fragmentShader:D()}),e.material.needsUpdate=!0)}))}function ie(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({uniforms:{ambientColor:{value:Y},ambientReflectance:{value:B},diffColor:{value:W},diffReflectance:{value:G},specColor:{value:$},specReflectance:{value:J},shininess:{value:q},lightPos:{value:new i.Pa4(g.position.x,g.position.y,g.position.z)}},vertexShader:O(),fragmentShader:K()}),e.material.needsUpdate=!0)}))}function te(){N.traverse((function(e){e instanceof i.Kj0&&e!=g&&(e.material=new i.jyz({uniforms:{ambientColor:{value:Y},ambientReflectance:{value:B},diffColor:{value:W},diffReflectance:{value:G},specColor:{value:$},specReflectance:{value:J},shininess:{value:q},lightPos:{value:new i.Pa4(g.position.x,g.position.y,g.position.z)}},vertexShader:U(),fragmentShader:H()}),e.material.needsUpdate=!0)}))}function ae(){switch(_){case"ambient":I();break;case"normal":Q();break;case"toon":ee();break;case"lambert":ne();break;case"gouraud_phong":oe();break;case"phong_phong":ie();break;case"phong_blinnPhong":te()}}!function(e){e.ambient="Ambient",e.normal="Normal",e.toon="Toon",e.lambert="Lambert",e.gouraud_phong="Gouraud",e.phong_phong="Phong",e.phong_blinnPhong="Blinn-Phong"}(b||(b={}));class re extends r{constructor(){super(...arguments),this.shader=b.ambient,this.ambient_reflectance=.5,this.ambient_color=[104,13,13],this.diffuse_reflectance=1,this.diffuse_color=[204,25,25],this.specular_reflectance=1,this.specular_color=[255,255,255],this.magnitude=128,this.lightX=2,this.lightY=2,this.lightZ=2}}function le(e){var n=new a.XS;n.add(e,"shader",function(e){let n=[];return Object.keys(e).forEach((o=>{"string"==typeof e[o]&&(e[e[o]]?n.push(o):n.push(e[o]))})),n}(b)).name("Shader"),n.add(e,"ambient_reflectance",0,1,.01).name("Ambient reflec...").listen().onChange((function(e){B=e,ae()})),n.addColor(e,"ambient_color").name("Ambient color").listen().onChange((function(e){Y=new i.Pa4(e[0]/255,e[1]/255,e[2]/255),ae()})),n.add(e,"diffuse_reflectance",0,1,.01).name("Diffuse reflect...").listen().onChange((function(e){G=e,ae()})),n.addColor(e,"diffuse_color").name("Diffuse color").listen().onChange((function(e){W=new i.Pa4(e[0]/255,e[1]/255,e[2]/255),ae()})),n.add(e,"specular_reflectance",0,1,.01).name("Specular reflec...").listen().onChange((function(e){J=e,ae()})),n.addColor(e,"specular_color").name("Specular color").listen().onChange((function(e){$=new i.Pa4(e[0]/255,e[1]/255,e[2]/255),ae()})),n.add(e,"magnitude",0,128,1).name("Magnitude").listen().onChange((function(e){q=e,ae()}));var o=n.addFolder("Light");return o.add(e,"lightX",-10,10,.5).name("X").listen().onChange((function(e){g.position.setX(e),ae()})),o.add(e,"lightY",-10,10,.5).name("Y").listen().onChange((function(e){g.position.setY(e),ae()})),o.add(e,"lightZ",-10,10,.5).name("Z").listen().onChange((function(e){g.position.setZ(e),ae()})),o.open(),n}function se(e){if("shader"==e.key)switch(e.value){case b.ambient:_="ambient",I();break;case b.normal:_="normal",Q();break;case b.toon:_="toon",ee();break;case b.lambert:_="lambert",ne();break;case b.gouraud_phong:_="gouraud_phong",oe();break;case b.phong_phong:_="phong_phong",ie();break;case b.phong_blinnPhong:_="phong_blinnPhong",te()}}!function(){var e,n=(e="Shader",document.title=e,m);n.setLayout([["renderer","."],[".","."]]),n.setLayoutColumns(["1fr","0fr"]),n.setLayoutRows(["100%","0%"]);var o=new re;le(o).open();var a,r=(a="renderer",f(document.createElement("div"),a));n.appendChild(r);var l=new i.CP7({antialias:!0});(function(e){var n=new i.FE5(1,.3,100,32),o=new i.xo$(1.4,20,20),t=new i.DvJ(2,2,2),a=new i.xo$(1.4,20,20),r=new i.jyz({vertexShader:u(),fragmentShader:p()}),l=new i.Kj0(n,r);e.add(l),o.scale(1,.5,1);var s=new i.Kj0(o,r);s.rotateX(1.570796),s.translateX(-4),s.translateZ(-1.5),e.add(s);var c=new i.Kj0(a,r);c.scale.set(1,.5,1),c.rotateX(1.570796),c.translateX(-4),c.translateZ(1.5),e.add(c);var f=new i.Kj0(t,r);return f.translateX(4),e.add(f),{material:r,model0:l,model1:s,model2:c,model3:f}})(N);var s=new i.xo$(.2,20,20),v=new i.vBJ({color:16744448});g=new i.Kj0(s,v),N.add(g),g.position.setX(2),g.position.setY(2),g.position.setZ(2);var d=new i.cPb;!function(e,n){e.near=.01,e.far=20,e.fov=70,e.position.z=6,e.lookAt(n.position),e.updateProjectionMatrix()}(d,N);var h=new t.z(d,r);!function(e){e.rotateSpeed=1,e.zoomSpeed=1.2,e.enableZoom=!0,e.keys={LEFT:"65",UP:"87",RIGHT:"68",BOTTOM:"83"},e.minDistance=.1,e.maxDistance=9}(h),o.addCallback(se),se({key:"shader",value:b.ambient}),new c(r,l,d,N,h).animate()}()}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var a=o[e]={exports:{}};return n[e].call(a.exports,a,a.exports,i),a.exports}i.m=n,e=[],i.O=(n,o,t,a)=>{if(!o){var r=1/0;for(f=0;f<e.length;f++){for(var[o,t,a]=e[f],l=!0,s=0;s<o.length;s++)(!1&a||r>=a)&&Object.keys(i.O).every((e=>i.O[e](o[s])))?o.splice(s--,1):(l=!1,a<r&&(r=a));if(l){e.splice(f--,1);var c=t();void 0!==c&&(n=c)}}return n}a=a||0;for(var f=e.length;f>0&&e[f-1][2]>a;f--)e[f]=e[f-1];e[f]=[o,t,a]},i.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return i.d(n,{a:n}),n},i.d=(e,n)=>{for(var o in n)i.o(n,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e={179:0};i.O.j=n=>0===e[n];var n=(n,o)=>{var t,a,[r,l,s]=o,c=0;if(r.some((n=>0!==e[n]))){for(t in l)i.o(l,t)&&(i.m[t]=l[t]);if(s)var f=s(i)}for(n&&n(o);c<r.length;c++)a=r[c],i.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return i.O(f)},o=self.webpackChunkshader=self.webpackChunkshader||[];o.forEach(n.bind(null,0)),o.push=n.bind(null,o.push.bind(o))})(),i.O(void 0,[345],(()=>i(232)));var t=i.O(void 0,[345],(()=>i(879)));t=i.O(t)})();